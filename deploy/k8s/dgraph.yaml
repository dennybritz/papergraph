# This is the service that should be used by the clients of Dgraph to talk to the cluster.
apiVersion: v1
kind: Service
metadata:
  name: papergraph-dgraph
  labels:
    app: papergraph
    tier: dgraph
spec:
  # type: LoadBalancer
  ports:
    - port: 5080
      targetPort: 5080
      name: zero-grpc
    - port: 6080
      targetPort: 6080
      name: zero-http
    - port: 8080
      targetPort: 8080
      name: alpha-http
    - port: 9080
      targetPort: 9080
      name: alpha-grpc
    - port: 8000
      targetPort: 8000
      name: ratel-http
  selector:
    app: papergraph
    tier: dgraph
---
# This StatefulSet runs 1 pod with one Zero, one Alpha & one Ratel containers.
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: papergraph-dgraph
spec:
  serviceName: "papergraph-dgraph"
  replicas: 1
  selector:
    matchLabels:
      app: papergraph
      tier: dgraph
  template:
    metadata:
      labels:
        app: papergraph
        tier: dgraph
    spec:
      tolerations:
        - key: "preemptible"
          operator: "Exists"
          effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: cloud.google.com/gke-nodepool
                    operator: In
                    values:
                      - preempt-1    
      containers:
        - name: ratel
          image: dgraph/dgraph:v20.03.1
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              name: ratel-http
          command:
            - dgraph-ratel
        - name: zero
          image: dgraph/dgraph:v20.03.1
          imagePullPolicy: Always
          ports:
            - containerPort: 5080
              name: zero-grpc
            - containerPort: 6080
              name: zero-http
          volumeMounts:
            - name: datadir
              mountPath: /dgraph
          command:
            - bash
            - "-c"
            - |
              set -ex
              dgraph zero --my=localhost:5080
        - name: alpha
          image: dgraph/dgraph:v20.03.1
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: alpha-http
            - containerPort: 9080
              name: alpha-grpc
          volumeMounts:
            - name: datadir
              mountPath: /dgraph
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          command:
            - bash
            - "-c"
            - |
              set -ex
              dgraph alpha --my=localhost:7080 --lru_mb 8192 --zero localhost:5080
      terminationGracePeriodSeconds: 60
      volumes:
        - name: datadir
          persistentVolumeClaim:
            claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        name: datadir
        annotations:
          volume.alpha.kubernetes.io/storage-class: anything
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 100Gi
